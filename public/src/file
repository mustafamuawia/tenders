



                      /////

                      import React, { useState, useEffect } from 'react';
import {
  Button, Card, CardBody, CardGroup, Col, Container, Form, Input,
  InputGroup, InputGroupAddon, InputGroupText, Row, Label, FormGroup, CardHeader, Table,
  Badge, Pagination, PaginationItem, PaginationLink
} from 'reactstrap';
import $ from 'jquery'
import dt from 'datatables.net';
export default function Tenders() {

  const [Tenders, setTenders] = useState([]);
  const [value, setValue] = useState('')
  const [isAdmin, setIsAdmin] = useState(false)
  const [table, setTable] = useState(null)
  function getUser() {
    var user = localStorage.getItem('user')
    return JSON.parse(user);
  }

  let initFormData = {
    TenderId: '',
    UserId: 0,
    EndUserCompanyName: '',
    EndUserContactName: '',
    EndUserContactEmail: '',
    EndUserContactPhone: '',
    InstallationCity: '',
    InstallationState: '',
    ResellerCompanyName: '',
    ResellerContactName: '',
    ResellerEmail: '',
    DistributorCompanyName: '',
    DistributorContactName: '',
    DistributorEmail: '',
    TenderCode: '',
    Sector: 'Private',
    Summary: '',
    Revenue: '',
    PurchasingDecisionDate: '',
    StartDate: '',
    FinishDate: '',
  }
  const [formData, setformData] = useState(initFormData)
  const context = React.useRef();
  function handleChange(event) {
    const value = event.target.value;
    setformData(formData => ({
      ...formData,
      [event.target.name]: event.target.value
    }))
  }

  const getData = async () => {
    const token = localStorage.getItem('access_token')

    await fetch(process.env['REACT_APP_API_URL'] + "/auth/tender/gettenders", {
      // mode:'cors',
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        "Authorization": 'Bearer ' + token + ''
      }
    })
      .then(res => res.json())
      .then(
        (result) => {
          setTenders(result)
          if ($.fn.dataTable.isDataTable('.datatable'))
          {
            if(result.length)
            {
           
            setTable(table)
            }
          }
        else
        {
          const _editRow = editRow;
          setTable($('.datatable').DataTable(
            {
              

              data: result,
               columns: [
                       {data: 'TenderId',
                       "render": function ( data, type, row, meta ) {
                        const $elmt = $(context.current)
                        
                        $( "#dataTable tbody tr" ).on( "click", function() {
                          console.log( $( this ).text() );
                        });
                        
                        return '<button class="btn edit btn-info" >Edit</button> '
                      // '<button class="btn btn-danger" '+
                      // 'onclick="(e) => deleteRow(e, data)" >Delete</button> '
                        //  '<a href="'+data+'">Download</a>';
                      }
                    },
                      {data: 'user.partner.CompanyName'},
                      { data: 'EndUserCompanyName' },
                      { data: 'EndUserContactName' },
                      { data: 'EndUserContactEmail' },
                      { data: 'EndUserContactPhone' },
                      { data: 'InstallationCity' },
                      { data: 'InstallationState' },
                      { data: 'ResellerCompanyName' },
                      { data: 'ResellerContactName' },
                      { data: 'ResellerEmail' },
                      { data: 'DistributorCompanyName' },
                      { data: 'DistributorContactName' },
                      { data: 'DistributorEmail' },
                      { data: 'TenderCode' },
                      { data: 'Sector' },
                      { data: 'Summary' },
                      { data: 'Revenue' },
                      { data: 'PurchasingDecisionDate' },
                      { data: 'StartDate' },
                      { data: 'FinishDate' },
                  ]
            }))
        }
      },

        (error) => {

        }
      );

  }

  const editRow = (
    // TenderId,
    // EndUserCompanyName,
    // EndUserContactName,
    // EndUserContactEmail,
    // EndUserContactPhone,
    // InstallationCity,
    // InstallationState,
    // ResellerCompanyName,
    // ResellerContactName,
    // ResellerEmail,
    // DistributorCompanyName,
    // DistributorContactName,
    // DistributorEmail,
    // TenderCode,
    // Sector,
    // Summary,
    // Revenue,
    // PurchasingDecisionDate,
    // StartDate,
    // FinishDate
    row) => {
      console.log(row)
    //setformData(formData);
  }


  const deleteRow = id => {
    if (window.confirm('Are you sure to delete this record?')) {
      const token = localStorage.getItem('access_token')
      fetch(process.env['REACT_APP_API_URL'] + "/Product/delete/" + id, {
        method: 'get',
        headers: {
          'Access-Control-Allow-Origin': '*',
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          "Authorization": 'Bearer ' + token + ''
        },
        //  body: JSON.stringify(formData),
      }).then(this.state.notify).then(getData()).then(setformData(initFormData)).then(alert("تم"));
    }
  }
  const handleSubmit = e => {
    e.preventDefault();
    const token = localStorage.getItem('access_token')

    if (formData.TenderId != '' && typeof formData.TenderId != "undefined") {
      fetch(process.env['REACT_APP_API_URL'] + "/auth/tenders/update", {
        method: 'post',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          "Authorization": 'Bearer ' + token + ''
        },
        body: JSON.stringify(formData),
      }).then(getData()).then(setformData(initFormData)).then(alert("تم"));
    }
    else {
      fetch(process.env['REACT_APP_API_URL'] + "/auth/tender/create", {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          "Authorization": 'Bearer ' + token + ''
        },
        body: JSON.stringify(formData),
      }).then(getData()).then(setformData(formData)).then(alert("تم"));;
    }

  };
  useEffect(() => {
    
    getData();

      const user = getUser()
      if (user.role == 'Admin') {
        setIsAdmin(true)
      }
      else
        setIsAdmin(false)


    }, [value]);

    return (
      <Container>
        {isAdmin ? <></> : <Row>
          <Col lg="12" xs="12">
            <Card>

              <CardHeader>
                <h1>Add Project</h1>
              </CardHeader>
              <CardBody>

                <Form onSubmit={handleSubmit}>

                  <Row>
                    <Col lg="5">
                      <div className='form-group'>
                        <Label htmlFor="EndUserCompanyName">End User Company Name</Label>
                        <Input type="text" onChange={handleChange} value={formData.EndUserCompanyName} name="EndUserCompanyName" placeholder="End User Company Name" autoComplete="EndUserCompanyName" />
                      </div>
                    </Col>
                    <Col lg="5">
                      <div className='form-group'>
                        <Label htmlFor="EndUserContactName">End User Contact Name</Label>

                        <Input type="text" onChange={handleChange} value={formData.EndUserContactName} name="EndUserContactName" placeholder="End User Contact Name" autoComplete="EndUserContactName" />

                      </div>
                    </Col>
                    <Col lg="2">
                      <div className='form-group'>

                        <Label htmlFor="EndUserContactPhone">End User Contact Phone</Label>

                        <Input type="text" onChange={handleChange} value={formData.EndUserContactPhone} name="EndUserContactPhone" placeholder="End User Contact Phone" autoComplete="EndUserContactPhone" />

                      </div>
                    </Col>
                  </Row>
                  <Row>
                    <Col lg="4">
                      <div className='form-group'>
                        <Label htmlFor="EndUserContactEmail">End User Contact Email</Label>

                        <Input type="text" onChange={handleChange} value={formData.EndUserContactEmail} name="EndUserContactEmail" placeholder="End User Contact Email" autoComplete="EndUserContactEmail" />
                      </div>
                    </Col>
                    <Col lg="4">
                      <div className='form-group'>
                        <Label htmlFor="ClientPhone">End User City</Label>

                        <Input type="text" onChange={handleChange} value={formData.ClientAddress} name="ClientPhone" placeholder="End User Phone" autoComplete="End User Phone" />
                      </div>
                    </Col>
                    <Col lg="4">
                      <div className='form-group'>
                        <Label htmlFor="ResellerCompanyName">Reseller Company Name</Label>

                        <Input type="text" onChange={handleChange} value={formData.ResellerCompanyName} name="ResellerCompanyName" placeholder="Reseller Company Name" autoComplete="ResellerCompanyName" />
                      </div>
                    </Col>
                    <Col lg="4">
                      <div className='form-group'>
                        <Label htmlFor="ResellerContactName">Reseller Contact Name</Label>

                        <Input type="text" onChange={handleChange} value={formData.ResellerContactName} name="ResellerContactName" placeholder="Reseller Contact Name" autoComplete="ResellerContactName" />
                      </div>
                    </Col>
                    <Col lg="4">
                      <div className='form-group'>
                        <Label htmlFor="ResellerEmail">Reseller Email</Label>

                        <Input type="text" onChange={handleChange} value={formData.ResellerEmail} name="ResellerEmail" placeholder="Reseller Email" autoComplete="ResellerEmail" />
                      </div>
                    </Col>
                    <Col lg="4">
                      <div className='form-group'>
                        <Label htmlFor="DistributorCompanyName">Distributor Company Name</Label>

                        <Input type="text" onChange={handleChange} value={formData.DistributorCompanyName} name="DistributorCompanyName" placeholder="Distributor Company Name" autoComplete="DistributorCompanyName" />
                      </div>
                    </Col>
                    <Col lg="4">
                      <div className='form-group'>
                        <Label htmlFor="DistributorContactName">Distributor Contact Name</Label>

                        <Input type="text" onChange={handleChange} value={formData.DistributorContactName} name="DistributorContactName" placeholder="Distributor Contact Name" autoComplete="DistributorContactName" />
                      </div>
                    </Col>
                    <Col lg="4">
                      <div className='form-group'>
                        <Label htmlFor="DistributorEmail">Distributor Email</Label>

                        <Input type="text" onChange={handleChange} value={formData.DistributorEmail} name="DistributorEmail" placeholder="Distributor Email" autoComplete="DistributorEmail" />
                      </div>
                    </Col>
                    <Col lg="4">
                      <div className='form-group'>
                        <Label htmlFor="InstallationCity">Installation City</Label>

                        <Input type="text" onChange={handleChange} value={formData.InstallationCity} name="InstallationCity" placeholder="Installation City" autoComplete="InstallationCity" />
                      </div>
                    </Col>
                    <Col lg="4">
                      <div className='form-group'>
                        <Label htmlFor="InstallationState">Installation State</Label>

                        <Input type="text" onChange={handleChange} value={formData.InstallationState} name="InstallationState" placeholder="Installation State" autoComplete="InstallationState" />
                      </div>
                    </Col>
                    <Col lg="4">
                      <div className='form-group'>
                        <Label htmlFor="Revenue"> Estimated Revenue</Label>

                        <Input type="text" onChange={handleChange} value={formData.Revenue} name="Revenue" placeholder="Estimated Revenue" autoComplete="EstimatedRevenue" />
                      </div>
                    </Col>
                    <Col lg="4">

                      <div className='form-group'>

                        <Label htmlFor="Summary">Summary</Label>
                        <textarea onChange={handleChange} className="form-control" value={formData.Summary} name="Summary" placeholder="Summary" autoComplete="Summary" >

                        </textarea>


                      </div>
                    </Col>

                    <Col lg="4">

                      <div className='form-group'>
                        <Label htmlFor="PurchasingDecisionDate">Estimated Business Purchasing Decision Date</Label>

                        <Input type="date" onChange={handleChange} value={formData.PurchasingDecisionDate} name="PurchasingDecisionDate" placeholder="Purchasing Decision Date" autoComplete="PurchasingDecisionDate" />
                      </div>
                    </Col>
                    <Col lg="4">
                      <div className='form-group'>
                        <Label htmlFor="StartDate"> Estimated Implementation Start Date</Label>

                        <Input type="date" onChange={handleChange} value={formData.StartDate} name="StartDate" autoComplete="StartDate" />
                      </div>
                    </Col>
                    <Col lg="4">
                      <div className='form-group'>
                        <Label htmlFor="FinishDate"> Estimated Implementation Finish Date</Label>

                        <Input type="date" onChange={handleChange} value={formData.FinishDate} name="FinishDate" autoComplete="FinishDate" />
                      </div>
                    </Col>

                    <Col lg="4">

                      <div className='form-group'>

                        <Label htmlFor="Sector">Sector</Label>
                        <select className='form-control' onChange={handleChange} name="Sector" value={formData.Sector}>
                          <option>Private</option>
                          <option>Government</option>
                        </select>

                      </div>
                    </Col>
                    <Col lg="4">
                      <div className='form-group'>


                        <Label htmlFor="TenderCode">Project Code (Optional)</Label>
                        <Input type="text" onChange={handleChange} value={formData.TenderCode} name="TenderCode" placeholder="Project Code" autoComplete="TenderCode" />

                      </div>
                    </Col>
                    <Col lg="6">
                      <Button color="primary" className="btn btn-info">Save</Button>
                    </Col>
                  </Row>
                </Form>

              </CardBody>

            </Card>
          </Col>

        </Row>}
        <Row>
          <Col lg="12" xs="12">
            <Card>
              <CardHeader>
                <i className="fa fa-align-justify"></i> Projects
              </CardHeader>
              <CardBody>


                <Table responsive striped className='datatable' id='dt'>
                  <thead>
                    <tr>
                      <th>Action</th>
                      <th>Partner</th>
                      {/* {isAdmin ? <th>Partner</th> : null} */}
                      <th>End User Company Name</th>
                      <th>EndUser Contact Name</th>
                      <th>EndUser Contact Email</th>
                      <th>EndUser Contact Phone</th>
                      <th>Installation City</th>
                      <th>Installation State</th>
                      <th>Reseller Company Name</th>
                      <th>Reseller Contact Name</th>
                      <th>Reseller Email</th>
                      <th>Distributor Company Name</th>
                      <th>Distributor Contact Name</th>
                      <th>Distributor Email</th>
                      <th>Tender Code</th>
                      <th>Sector</th>
                      <th>Summary</th>
                      <th>Revenue</th>
                      <th>Purchasing Decision Date</th>
                      <th>StartDate</th>
                      <th>FinishDate</th>

                    </tr>
                  </thead>
                  <tbody>

                  </tbody></Table>





              </CardBody>
            </Card>

          </Col>
        </Row>
      </Container>

    );

  }